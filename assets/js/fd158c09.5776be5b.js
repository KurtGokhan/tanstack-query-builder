"use strict";(self.webpackChunktanstack_query_builder_website=self.webpackChunktanstack_query_builder_website||[]).push([[245],{3023:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>h});var s=i(3696);const n={},a=s.createContext(n);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function h(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(a.Provider,{value:t},e.children)}},8865:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>h,default:()=>o,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/builder","title":"Builder API","description":"Base Builder API","source":"@site/docs/api/builder.mdx","sourceDirName":"api","slug":"/api/builder","permalink":"/tanstack-query-builder/api/builder","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"title":"Builder API","sidebar_position":0},"sidebar":"tutorialSidebar","previous":{"title":"Tag Based Invalidation","permalink":"/tanstack-query-builder/tags"},"next":{"title":"Query API","permalink":"/tanstack-query-builder/api/query"}}');var n=i(2540),a=i(3023);const r={title:"Builder API",sidebar_position:0},h=void 0,l={},d=[{value:"Base Builder API",id:"base-builder-api",level:2},{value:"withClient",id:"withclient",level:3},{value:"withConfig",id:"withconfig",level:3},{value:"withPreprocessor",id:"withpreprocessor",level:3},{value:"withMiddleware",id:"withmiddleware",level:3},{value:"withTags",id:"withtags",level:3},{value:"withTagTypes",id:"withtagtypes",level:3},{value:"withUpdates",id:"withupdates",level:3},{value:"withPagination",id:"withpagination",level:3},{value:"withData",id:"withdata",level:3},{value:"withError",id:"witherror",level:3},{value:"withVars",id:"withvars",level:3},{value:"asBound",id:"asbound",level:3},{value:"asFrozen",id:"asfrozen",level:3},{value:"client",id:"client",level:3},{value:"tags",id:"tags",level:3},{value:"HTTP Builder API",id:"http-builder-api",level:2},{value:"withBaseUrl",id:"withbaseurl",level:3},{value:"withPath",id:"withpath",level:3},{value:"withMethod",id:"withmethod",level:3},{value:"withBody",id:"withbody",level:3},{value:"withParams",id:"withparams",level:3},{value:"withSearch",id:"withsearch",level:3},{value:"withHeaders",id:"withheaders",level:3},{value:"withMeta",id:"withmeta",level:3}];function c(e){const t={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"base-builder-api",children:"Base Builder API"}),"\n",(0,n.jsxs)(t.p,{children:["A builder is created like ",(0,n.jsx)(t.code,{children:"new HttpQueryBuilder()"}),".\nThe builder instance has a fluent API, meaning you can chain methods together to create a new instance with the desired configuration."]}),"\n",(0,n.jsx)(t.p,{children:"You must configure the builder before using it.\nTherefore, it's important to know the available methods that can be used to configure the builder."}),"\n",(0,n.jsx)(t.h3,{id:"withclient",children:"withClient"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withClient(client: QueryClient, options): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Sets the query client for this builder.\nThis is required in order to enable ",(0,n.jsx)(t.a,{href:"#client",children:"client"})," and ",(0,n.jsx)(t.a,{href:"#tags",children:"tags"})," interfaces.\nImperative operations done through those interfaces will be done with the provided query client.\nThis method also enables the ability to sync tag invalidation with other browser tabs."]}),"\n",(0,n.jsx)(t.h3,{id:"withconfig",children:"withConfig"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withConfig(config): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Creates a new query builder with additional config.\nThis is generally used internally and should not be used directly."}),"\n",(0,n.jsx)(t.h3,{id:"withpreprocessor",children:"withPreprocessor"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withPreprocessor(preprocessor): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Adds a preprocessor function to the query.\nThe preprocessor function is called before the query function is called."}),"\n",(0,n.jsx)(t.h3,{id:"withmiddleware",children:"withMiddleware"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withMiddleware(middleware): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Adds a middleware function to the query.\nThe middleware function wraps the query function and\ncan be used to modify the input variables, the output data, or the error."}),"\n",(0,n.jsx)(t.p,{children:"A middleware has many use cases, such as:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Logging"}),"\n",(0,n.jsx)(t.li,{children:"Caching"}),"\n",(0,n.jsx)(t.li,{children:"Error handling"}),"\n",(0,n.jsx)(t.li,{children:"Retrying"}),"\n",(0,n.jsx)(t.li,{children:"Transforming the data"}),"\n",(0,n.jsx)(t.li,{children:"Adding authentication"}),"\n",(0,n.jsx)(t.li,{children:"Side effects"}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"If input variables are modified, preprocessors should be preferred over middleware functions."}),"\n",(0,n.jsx)(t.h3,{id:"withtags",children:"withTags"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withTags(tags): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Adds a tag to the query.\nThe tag is used to invalidate or update the query when the tag is updated.\nTo learn more about tags, see the ",(0,n.jsx)(t.a,{href:"/tags",children:"tag based invalidation"})," section of the documentation."]}),"\n",(0,n.jsx)(t.h3,{id:"withtagtypes",children:"withTagTypes"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withTagTypes<T>(): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Declares the type of tags of the query.\nThis is used to strongly type the tags which can be helpful when using ",(0,n.jsx)(t.a,{href:"#withupdates",children:"withUpdates"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"withupdates",children:"withUpdates"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withUpdates(updates): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Adds a declarative update to the mutation.\nThis is used to invalidate or update the queries that were marked with ",(0,n.jsx)(t.a,{href:"#withtags",children:"withTags"}),".\nTo learn more about tags, see the ",(0,n.jsx)(t.a,{href:"/tags",children:"tag based invalidation"})," section of the documentation."]}),"\n",(0,n.jsx)(t.h3,{id:"withpagination",children:"withPagination"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withPagination(paginationOptions): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Adds infinite query support to the query.\nRequires ",(0,n.jsx)(t.code,{children:"getNextPageParam"})," to be passed in options.\nThis is required in order to enable the hooks like ",(0,n.jsx)(t.code,{children:"useInfiniteQuery"}),".\nAdditional options can also be provided which are passed to the underlying hook."]}),"\n",(0,n.jsx)(t.h3,{id:"withdata",children:"withData"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withData<T>(): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Declares the type of returned data of the query."}),"\n",(0,n.jsx)(t.h3,{id:"witherror",children:"withError"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withError<T>(): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Declares the type of error of the query."}),"\n",(0,n.jsx)(t.h3,{id:"withvars",children:"withVars"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withVars<T>(defaults?: Partial<T>, resetVars: boolean = false): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Declares the type of variables of the query.\nOptionally, you can pass the first argument to set the default variables,\nwhich will be merged with the variables passed to the query."}),"\n",(0,n.jsxs)(t.p,{children:["This method is generally used internally. If you are using a ",(0,n.jsx)(t.code,{children:"HttpQueryBuilder"}),", you should use its specific methods such as ",(0,n.jsx)(t.a,{href:"#withsearch",children:(0,n.jsx)(t.code,{children:"withSearch"})}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"asbound",children:"asBound"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"asBound(): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Binds all query methods to this class instance, so that they can be called after object destructuring such as ",(0,n.jsx)(t.code,{children:"const { useQuery } = builder.asBound()"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"asfrozen",children:"asFrozen"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"asFrozen(): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Returns a frozen version of this builder. The frozen version cannot be modified using ",(0,n.jsx)(t.code,{children:"with*"})," methods, so those methods will not be available.\nThe methods in the ",(0,n.jsx)(t.a,{href:"./query",children:"Query API"})," will still be available."]}),"\n",(0,n.jsx)(t.h3,{id:"client",children:"client"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"get client(): QueryBuilderClient\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Exposes some methods to perform imperative operations on the query client, such as ",(0,n.jsx)(t.code,{children:"prefetch"}),", ",(0,n.jsx)(t.code,{children:"invalidate"}),", ",(0,n.jsx)(t.code,{children:"refetch"}),", ",(0,n.jsx)(t.code,{children:"remove"})," and more.\nSee ",(0,n.jsx)(t.a,{href:"./client",children:"Client API Reference"})," to learn more."]}),"\n",(0,n.jsxs)(t.p,{children:["Note that this API is only available if ",(0,n.jsx)(t.a,{href:"#withclient",children:(0,n.jsx)(t.code,{children:"withClient"})})," was called."]}),"\n",(0,n.jsx)(t.h3,{id:"tags",children:"tags"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"get tags(): QueryBuilderTagsManager\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Exposes some methods to perform imperative tag operations.\nSee ",(0,n.jsx)(t.a,{href:"./tags",children:"Tags API Reference"})," to learn more."]}),"\n",(0,n.jsxs)(t.p,{children:["Note that this API is only available if ",(0,n.jsx)(t.a,{href:"#withclient",children:(0,n.jsx)(t.code,{children:"withClient"})})," was called."]}),"\n",(0,n.jsx)(t.h2,{id:"http-builder-api",children:"HTTP Builder API"}),"\n",(0,n.jsxs)(t.p,{children:["A ",(0,n.jsx)(t.code,{children:"HttpQueryBuilder"})," is a subclass of the ",(0,n.jsx)(t.code,{children:"QueryBuilder"})," and is used to create HTTP queries.\nThe queries created by this builder will make HTTP requests with the specified configuration."]}),"\n",(0,n.jsx)(t.h3,{id:"withbaseurl",children:"withBaseUrl"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withBaseUrl(url: string): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Sets the base URL for the HTTP request.\nThe base URL will be prepended to relative URLs."}),"\n",(0,n.jsx)(t.h3,{id:"withpath",children:"withPath"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withPath(path: string): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Sets the path for the HTTP request.\nThe path can contain path parameters which are defined with the format ",(0,n.jsx)(t.code,{children:"/path/:param1/:param2"}),".\nThe path parameters are automatically extracted and typed strongly as if declared with ",(0,n.jsx)(t.a,{href:"#withparams",children:(0,n.jsx)(t.code,{children:"withParams"})}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"withmethod",children:"withMethod"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withMethod(method: HttpMethod): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Sets the HTTP method for the request.\nThe method can be one of the following: ",(0,n.jsx)(t.code,{children:"get"}),", ",(0,n.jsx)(t.code,{children:"post"}),", ",(0,n.jsx)(t.code,{children:"put"}),", ",(0,n.jsx)(t.code,{children:"patch"}),", ",(0,n.jsx)(t.code,{children:"delete"}),", ",(0,n.jsx)(t.code,{children:"options"}),", ",(0,n.jsx)(t.code,{children:"head"}),".\nThe default method is ",(0,n.jsx)(t.code,{children:"get"}),"."]}),"\n",(0,n.jsx)(t.h3,{id:"withbody",children:"withBody"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withBody<T>(body?: Partial<T>): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Defines the type of body of the request.\nOptionally, you can pass the first argument to set the default body."}),"\n",(0,n.jsx)(t.h3,{id:"withparams",children:"withParams"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withParams<T>(params?: Partial<T>): this\n"})}),"\n",(0,n.jsxs)(t.p,{children:["Defines the type of path parameters of the request.\nOptionally, you can pass the first argument to set the default parameters.\nNote that when ",(0,n.jsx)(t.a,{href:"#withpath",children:(0,n.jsx)(t.code,{children:"withPath"})})," is used, the path parameters are automatically extracted.\nThis method doesn't have to be used in that case."]}),"\n",(0,n.jsx)(t.h3,{id:"withsearch",children:"withSearch"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withSearch<T>(search?: Partial<T>): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Defines the type of search parameters of the request.\nOptionally, you can pass the first argument to set the default search parameters."}),"\n",(0,n.jsx)(t.h3,{id:"withheaders",children:"withHeaders"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withHeaders<T>(headers?: Partial<T>): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Defines the type of headers of the request.\nOptionally, you can pass the first argument to set the default headers."}),"\n",(0,n.jsx)(t.h3,{id:"withmeta",children:"withMeta"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"withMeta<T>(meta?: Partial<T>): this\n"})}),"\n",(0,n.jsx)(t.p,{children:"Defines the type of metadata of the request.\nOptionally, you can pass the first argument to set the default metadata."}),"\n",(0,n.jsx)(t.p,{children:"This can be used to pass additional parameters that are not part of the request.\nMetadata is usually used in middleware functions for advanced use cases."})]})}function o(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);